{#
  Copyright 2017-present Open Networking Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
#}

tosca_definitions_version: tosca_simple_yaml_1_0

description: created by platform-install, need to add M-CORD services later

imports:
   - custom_types/xos.yaml
   - custom_types/slice.yaml
   - custom_types/site.yaml
   - custom_types/image.yaml
   - custom_types/flavor.yaml
   - custom_types/network.yaml
   - custom_types/onosservice.yaml
   - custom_types/networkslice.yaml
   - custom_types/vhssservice.yaml
   - custom_types/vhssvendor.yaml
   - custom_types/vhsstenant.yaml
   - custom_types/vmmeservice.yaml
   - custom_types/vmmevendor.yaml
   - custom_types/vmmetenant.yaml
   - custom_types/oaispgw.yaml
   - custom_types/oaispgwinstance.yaml
   - custom_types/vepcservice.yaml

topology_template:
  node_templates:

# site, image, fully created in deployment.yaml

    {{ site_name }}:
      type: tosca.nodes.Site
      properties:
        must-exist: true
        name: {{ site_name }}

# Define service instance flavor size

    m1.small:
      type: tosca.nodes.Flavor
      properties:
        name: m1.small
        must-exist: true

    m1.medium:
      type: tosca.nodes.Flavor
      properties:
        name: m1.medium
        must-exist: true

    m1.large:
      type: tosca.nodes.Flavor
      properties:
        name: m1.large
        must-exist: true

    m1.xlarge:
      type: tosca.nodes.Flavor
      properties:
        name: m1.xlarge
        must-exist: true

 # Define image
    trusty-server-multi-nic:
      type: tosca.nodes.Image
      properties:
        name: trusty-server-multi-nic

    image-oai:
      type: tosca.nodes.Image
      properties:
        name: image-oai

# management networks, fully created in management-net.yaml
    management:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: management

{% if use_management_hosts %}
    management_hosts:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: management_hosts
{% endif %}

# sgi network, fully created in sgi-net.yaml
    sgi_network:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: sgi_network
# s1u_network is for connectivity between VMs, fully created in oai-s1u-net.yaml
    s1u_network:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: s1u_network
# s1mme_network is for connectivity between VMs, fully created in oai-s1mme-net.yaml
    s1mme_network:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: s1mme_network
# s6a_network is for connectivity between VMs, fully created in s6a-net.yaml
    s6a_network:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: s6a_network
# s11_network is for connectivity between VMs, fully created in s11-net.yaml
    s11_network:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: s11_network

# VEPC Service, generated 1 service instance: vEPC
    service#vepc:
      type: tosca.nodes.VEPCService
      properties:
        name: VEPCService
        public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
        private_key_fn: /opt/xos/services/vhss/keys/mcord_rsa
      artifacts:
        pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

# OAI HSS Service, generated 1 service instance: vHSS
    service#oaihss:
      type: tosca.nodes.VHSSService
      properties:
        name: VHSSService
        view_url: /admin/vhss/vhss/$id$/
        kind: vhss
        public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
        private_key_fn: /opt/xos/services/vhss/keys/mcord_rsa
      artifacts:
        pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

# OAI MME Service, generated 1 service instance: vMME
    service#oaimme:
      type: tosca.nodes.VMMEService
      properties:
        name: VMMEService
        view_url: /admin/vmme/vmme/$id$/
        kind: vmme
        public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
        private_key_fn: /opt/xos/services/vhss/keys/mcord_rsa
      artifacts:
        pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

# OAI SPGW Service, generated 1 service instance: vSPGW
    service#oaispgw:
      type: tosca.nodes.OAISPGWService
      properties:
        name: OAISPGW
        view_url: /admin/oaispgw/oaispgw/$id$/
        kind: oaiservice
        public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/oaispgw_rsa.pub') }}
        private_key_fn: /opt/xos/services/oaispgw/keys/oaispgw_rsa
      artifacts:
        pubkey: /opt/cord_profile/key_import/oaisgpw_rsa.pub

# OAI MME Service slice, temporily use trusty as default image
    {{ site_name }}_vmme:
      description: vMME Service Slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_vmme
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: {{ site_name }}
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#oaimme
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.medium
              relationship: tosca.relationships.BelongsToOne

# OAI HSS Service slice, temporily use trusty as default image
    {{ site_name }}_vhss:
      description: vHSS Service Slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_vhss
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: {{ site_name }}
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#oaihss
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.medium
              relationship: tosca.relationships.BelongsToOne

# OAI SPGW Service slice, temporily use trusty as default image
    {{ site_name }}_oaispgw:
      description: OAI SPGW Service Slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_oaispgw
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: {{ site_name }}
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#oaispgw
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: trusty-server-multi-nic
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.large
              relationship: tosca.relationships.BelongsToOne

# OAI MME Vender
    oai_vmme:
      type: tosca.nodes.VMMEVendor
      properties:
        name: oai_vmme
      requirements:
        - image:
            node: trusty-server-multi-nic
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.medium
            relationship: tosca.relationships.BelongsToOne

# OAI HSS Vender
    oai_vhss:
      type: tosca.nodes.VHSSVendor
      properties:
        name: oai_vhss
      requirements:
        - image:
            node: trusty-server-multi-nic
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.small
            relationship: tosca.relationships.BelongsToOne
